import PySimpleGUI as sg
from PySimpleGUI.PySimpleGUI import Window
from cryptography.fernet import Fernet
import os


#determined font for the GUI 
font = ("Times New Roman", 20)
sg.theme('DarkAmber')

#creating a Layout for our GUI
layout = [
    [
        sg.Text("A simple login UI Example.",size=(68, 2), justification='centre', font=font)
    ],
    [
        sg.Text('Enter username : ',size=(20, 1),justification='centre', font=font), 
        sg.InputText(size=(28, 1),enable_events=True, key="-USR-", font=font),
        sg.Button('Save Cred',size=(20, 1), font=font,key="-SVC-")
    ],
    [
        sg.Text('Enter password : ',size=(20, 1),justification='centre', font=font), 
        sg.InputText(size=(28, 1),enable_events=True, key="-PSS-", font=font, password_char='*'),
        sg.Button('Auto fill',size=(20, 1), font=font,key="-AFL-")
    ],
    [
        sg.Button('LOGIN',size=(34, 1), font=font,key="-LGN-"),sg.Button('Exit',size=(34,1),font=font)
    ]
]

#you can assign key by yourself or can be generated by library
#get a key: 
key = 'cZoktSH6kTxUt46dO0yY06LDMZAahvPJ2yfvyT2eLS4='

fernet = Fernet(key)

# Create the window
window = sg.Window("Title is given here", layout,enable_close_attempted_event=True,finalize=True)
#the string is pointed to the title of the UI
#finalize=True determines that the layout is not going to changed at further default it is false 
#setting it true lets you editing the values of buttons, textbox or even the text field
saved_once = False
# Create an event loop
while True:
    # adding events to window.
    event, values = window.read()
    # creating an event for upload button.
    if event == "-LGN-" :
        #getting values from text box.
        usr_nm = str(values["-USR-"])
        pass_ss = str(values["-PSS-"])
        if usr_nm == '':
            # check for username field.
            sg.popup('Notice!!',"username is empty !!")
            continue
        elif pass_ss == '':
            # check for password field.
            sg.popup('Notice!!',"password field is empty!!")
            continue
    elif event == "-SVC-":
        if saved_once or os.path.isfile('bledygo.y'):
            sg.popup('NOTICE !!!','there can be only one saved credentials',
                     'if you want to modify it delete the "**something**.y" file ')
        else:
            usr = bytes(str(values["-USR-"]),'ascii')
            pss = bytes(str(values["-PSS-"]),'ascii')
            if usr == bytes('','ascii'):
                sg.popup('Notice!!',"username is empty !!")
                continue
            elif pss == bytes('','ascii'):
                sg.popup('Notice!!',"password field is empty!!")
                continue
            else:
                saved_once = True
                with open('bledygo.y', 'wb') as filekey:
                    #filekey.writelines(ts)
                    filekey.write(fernet.encrypt(usr))
                    filekey.write(bytes("\n",'ascii'))
                    filekey.write(fernet.encrypt(pss))
                    filekey.close()
                    sg.popup("Great","credentials saved!!")
                    
    elif event == "-AFL-":
        print(os.path)
        if os.path.isfile('bledygo.y'):
            print ("File exist")
            with open('bledygo.y', 'rb') as enc_file:
                encrypted = enc_file.readlines()
            #print(encrypted)
            print(encrypted)
            # decrypting the file
            u_sr = fernet.decrypt(encrypted[0])
            p_ss = fernet.decrypt(encrypted[1])
            us_r = str(u_sr)
            ps_s = str(p_ss)
            print(us_r,ps_s)
            window.Element('-USR-').update(us_r[2:-1])
            window.Element('-PSS-').update(ps_s[2:-1])
        else:
            sg.Popup('there are no saved passwords!!','the file must got corrupted or deleted !',
                     'try re-saving after deleting "**something**.y"  file')
            print ("File not exist")
    # creating an event for exit button
    elif ((event == sg.WINDOW_CLOSE_ATTEMPTED_EVENT or event == 'Exit') and 
        sg.popup_yes_no('Do you really want to exit?') == 'Yes'):
        #if the user select exit this loop will be ended
            break

window.close()
